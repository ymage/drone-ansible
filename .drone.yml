---
kind: pipeline
name: testing

platform:
  os: linux
  arch: amd64

steps:
  - name: vet
    pull: always
    image: golang:1.13.1
    commands:
      - go vet ./...
    environment:
      GO111MODULE: "on"
    volumes:
      - name: gopath
        path: /go

  - name: test
    pull: always
    image: golang:1.13.1
    commands:
      - go test -cover ./...
    environment:
      GO111MODULE: "on"
    volumes:
      - name: gopath
        path: /go

volumes:
  - name: gopath
    temp: {}

trigger:
  ref:
    - refs/heads/master
    - "refs/tags/**"
    - "refs/pull/**"

---
kind: pipeline
name: linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: latest
    pull: always
    image: plugins/docker:linux-amd64
    settings:
      tags:
        - linux-amd64
        - latest
        - ${DRONE_COMMIT_SHA}
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: ymage/drone-ansible
      build_args:
        VERSION: ${DRONE_COMMIT_SHA:0:8}
    when:
      event:
        exclude:
          - tag

  - name: publish
    pull: always
    image: plugins/docker:linux-amd64
    settings:
      tags:
        - linux-amd64
        - latest
        - ${DRONE_COMMIT_SHA}
      auto_tag: true
      auto_tag_suffix: linux-amd64
      force_tag: true
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: ymage/drone-ansible
      build_args:
        VERSION: ${DRONE_TAG##v}
    when:
      event:
        - tag

trigger:
  ref:
    - refs/heads/master
    - "refs/tags/**"
    - "refs/pull/**"

depends_on:
  - testing

---
kind: pipeline
name: notifications

platform:
  os: linux
  arch: amd64

steps:
  - name: Rocket Notification
    image: rmilewski/drone-rocket:latest
    when:
      status:
        - success
        - failure
    settings:
      webhook:
        from_secret: rocket_chat_webhook
      channel: desordre
      username: desordre
      color:
        - value: green
          when:
            DRONE_BUILD_STATUS: success
        - value: red
          when:
            DRONE_BUILD_STATUS: failure
      message:
        - value: >
            [Build #${DRONE_BUILD_NUMBER}](${DRONE_BUILD_LINK}) succeeded.
            :thumbsup: Good job.
          when:
            DRONE_BUILD_STATUS: success
        - value: >
            [Build #${DRONE_BUILD_NUMBER}](${DRONE_BUILD_LINK}) failed.
            :disappointed: Fix ${DRONE_COMMIT_LINK} please.
      text: ${DRONE_COMMIT_MESSAGE}
      fields:
        - title: Author
          value: ${DRONE_COMMIT_AUTHOR} / ${DRONE_COMMIT_AUTHOR_EMAIL}
        - title: Git Repo
          value: "[${DRONE_REPO}](${DRONE_REMOTE_URL})"
        - title: Event
          value: ${DRONE_BUILD_EVENT}

trigger:
  ref:
    - refs/heads/master
    - "refs/tags/**"

depends_on:
  - linux-amd64
...
